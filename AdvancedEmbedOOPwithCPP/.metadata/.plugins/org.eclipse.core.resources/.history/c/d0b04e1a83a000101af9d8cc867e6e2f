#include "GPIO.hpp"


// 构造函数
// isOutput == true 为输出模式, isOutput == false 为输入模式
GPIO::GPIO(GPIO_TypeDef * gpioPort, uint8_t gpioPin, bool isOutput): port(gpioPort), pin(gpioPin) {
	// 启用 GPIO 的时钟访问
	if (gpioPort == GPIOA) RCC->AHB1ENR |= (1U<<0);
	if (gpioPort == GPIOC) RCC->AHB1ENR |= (1U<<2);
	// ......

	// 配置引脚
	if (isOutput) {
		gpioPort->MODER |= (1 << (2 * gpioPin));
		gpioPort->MODER &= ~(1 << (2 * gpioPin + 1));
	} else {
		gpioPort->MODER &= ~(3 << (2 * gpioPin));
	}
}


// 设置 GPIO 输出状态的操作符
// state == true 为高, state == false 为低
void operator = (bool state);

// 开启 LED 的重载"OR" (|=) 赋值运算符
void operator |= (bool state);

// 关闭 LED 的重载"AND" (&=) 赋值运算符
void operator &= (bool state);

// 切换 LED 的重载"XOR" (^=) 赋值运算符
void operator ^= (bool state);

// 读取输入状态的重载"bool"赋值运算符 (input为高时返回 true, 为低时返回 false)
operator bool() const;





